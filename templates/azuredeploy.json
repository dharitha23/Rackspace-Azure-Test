{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "vnetName": {
        "type": "string",
        "defaultValue": "VNet1",
        "metadata": {
          "description": "VNet name"
        }
      },
      "vnetAddressPrefix": {
        "type": "string",
        "defaultValue": "10.2.0.0/16",
        "metadata": {
          "description": "Address prefix"
        }
      },
      "subnet1AddressPrefix": {
        "type": "string",
        "defaultValue": "10.2.0.0/24",
        "metadata": {
          "description": "Subnet Prefix"
        }
      },
      "subnet1Name": {
        "type": "string",
        "defaultValue": "subnet1",
        "metadata": {
          "description": "Subnet Name"
        }
      },
      "subnet2AddressPrefix": {
        "type": "string",
        "defaultValue": "10.2.1.0/24",
        "metadata": {
          "description": "Subnet Prefix"
        }
      },
      "subnet2Name": {
        "type": "string",
        "defaultValue": "subnet2",
        "metadata": {
          "description": "Subnet Name"
        }
      },
      "lbName": {
        "type": "string",
        "defaultValue": "Lb1",
        "metadata": {
          "description": "Load Balancer Name"
        }
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources."
        }
      },
      "vmSku": {
        "type": "string",
        "defaultValue": "Standard_A1_v2",
        "metadata": {
            "description": "Size of VMs in the VM Scale Set."
        }
      },
      "vmssName": {
          "type": "string",
          "defaultValue": "VMSS1",
          "minLength": 3,
          "maxLength": 61,
          "metadata": {
              "description": "String used as a base for naming resources. Must be 3-61 characters in length and globally unique across Azure. A hash is prepended to this string for some resources, and resource-specific information is appended."
          }
      },
      "instanceCount": {
          "type": "int",
          "defaultValue": 3,
          "minValue": 1,
          "maxValue": 100,
          "metadata": {
              "description": "Number of VM instances (100 or less)."
          }
      },
      "singlePlacementGroup": {
          "type": "bool",
          "defaultValue": true,
          "metadata": {
              "description": "When true this limits the scale set to a single placement group, of max size 100 virtual machines. NOTE: If singlePlacementGroup is true, it may be modified to false. However, if singlePlacementGroup is false, it may not be modified to true."
          }
      },
      "adminPassword": {
        "type": "securestring",
        "metadata": {
            "description": "Admin password on all VMs."
        }
    },
    "adminUsername": {
        "type": "string",
        "defaultValue": "vmadminuser",
        "metadata": {
            "description": "Admin username on all VMs."
        }
    },
    "windowsOSVersion": {
        "type": "string",
        "defaultValue": "2019-Datacenter",
        "allowedValues": [
            "2008-R2-SP1",
            "2012-Datacenter",
            "2012-R2-Datacenter",
            "2016-Datacenter",
            "2019-Datacenter"
        ],
        "metadata": {
            "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version. Allowed values: 2008-R2-SP1, 2012-Datacenter, 2012-R2-Datacenter & 2016-Datacenter, 2019-Datacenter."
        }
    },
    "platformFaultDomainCount": {
        "type": "int",
        "defaultValue": 1,
        "metadata": {
            "description": "Fault Domain count for each placement group."
        }
    }
    },
    "variables": {
      "domainName": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]",
      "vmssName": "[toLower(parameters('vmssName'))]",
      "lbSkuName": "Standard",
      "lbPublicIpAddressName": "lbPublicIP",
      "lbFrontEndName": "LoadBalancerFrontEnd",
      "lbBackendPoolName": "LoadBalancerBackEndPool",
      "lbProbeName": "loadBalancerHealthProbe",
      "nsgName1": "Default-NSG",
      "nicName": "[concat(variables('domainName'), 'nic')]",
      "ipConfigName": "[concat(variables('domainName'), 'ipconfig')]",
      "osType": {
        "publisher": "MicrosoftWindowsServer",
        "offer": "WindowsServer",
        "sku": "[parameters('windowsOSVersion')]",
        "version": "latest"
        },
      "imageReference": "[variables('osType')]"
    },
    "resources": [
      {
        "type": "Microsoft.Network/virtualNetworks",
        "apiVersion": "2020-06-01",
        "name": "[parameters('vnetName')]",
        "location": "[parameters('location')]",
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "[parameters('vnetAddressPrefix')]"
            ]
          },
          "subnets": [
              {
                "name": "[parameters('subnet1Name')]",
                "location": "[parameters('location')]",
                "properties": {
                    "addressPrefix": "[parameters('subnet1AddressPrefix')]"
                }
              }
          ]
     }
    },
    {
        "type": "Microsoft.Network/virtualNetworks/subnets",
        "apiVersion": "2020-11-01",
        "name": "[concat(parameters('vnetName'), '/subnet1')]",
        "dependsOn": [
            "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]",
            "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName1'))]"
        ],
        "properties": {
            "addressPrefix": "[parameters('subnet1AddressPrefix')]",
            "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName1'))]"
            }
        }
    },
    {
        "type": "Microsoft.Network/networkSecurityGroups",
        "apiVersion": "2020-06-01",
        "name": "[variables('nsgName1')]",
        "location": "[parameters('location')]",
        "properties": {
            "securityRules": [
            {
                "name": "Allow_HTTP",
                "properties": {
                "description": "NSG rule for allowing HTTP traffic",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "80",
                "sourceAddressPrefix": "Internet",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 100,
                "direction": "Inbound"
                }
            },
            {
                "name": "Deny_RDP_SSH",
                "properties": {
                "description": "NSG rule for denying RDP and SSH traffic",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "3389,22",
                "sourceAddressPrefix": "Internet",
                "destinationAddressPrefix": "*",
                "access": "Deny",
                "priority": 101,
                "direction": "Inbound"
                }
            }
            ]
        }
    },
    {
      "type": "Microsoft.Network/loadBalancers",
      "apiVersion": "2020-06-01",
      "name": "[parameters('lbName')]",
      "location": "[parameters('location')]",
      "sku": {
          "name": "[variables('lbSkuName')]"
      },
      "dependsOn": [
          "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]",
          "[resourceId('Microsoft.Network/publicIPAddresses', variables('lbPublicIpAddressName'))]"
      ],
      "properties": {
          "frontendIPConfigurations": [
              {
                  "name": "[variables('lbFrontEndName')]",
                  "properties": {
                      "publicIPAddress": {
                          "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('lbPublicIpAddressName'))]"
                      }
                  }
              }
          ],
          "backendAddressPools": [
              {
                  "name": "[variables('lbBackendPoolName')]"
              }
          ],
          "loadBalancingRules": [
              {
                  "name": "HTTPRule",
                  "properties": {
                      "frontendIPConfiguration": {
                          "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', parameters('lbName'), variables('lbFrontEndName'))]"
                      },
                      "backendAddressPool": {
                          "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('lbName'), variables('lbBackendPoolName'))]"
                      },
                      "frontendPort": 80,
                      "backendPort": 80,
                      "enableFloatingIP": false,
                      "idleTimeoutInMinutes": 10,
                      "protocol": "Tcp",
                      "enableTcpReset": true,
                      "loadDistribution": "Default",
                      "disableOutboundSnat": true,
                      "probe": {
                          "id": "[resourceId('Microsoft.Network/loadBalancers/probes', parameters('lbName'), variables('lbProbeName'))]"
                      }
                  }
              }
          ],
          "probes": [
              {
                  "name": "[variables('lbProbeName')]",
                  "properties": {
                      "protocol": "Http",
                      "port": 80,
                      "intervalInSeconds": 5,
                      "numberOfProbes": 2,
                      "requestPath": "/"
                  }
              }
          ]
      }
  },
  {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2020-06-01",
      "name": "[variables('lbPublicIPAddressName')]",
      "location": "[parameters('location')]",
      "sku": {
          "name": "[variables('lbSkuName')]"
      },
      "properties": {
          "publicIPAddressVersion": "IPv4",
          "publicIPAllocationMethod": "Static",
          "dnsSettings": {
            "domainNameLabel": "[variables('domainName')]"
        }
      }
  },
  {
    "type": "Microsoft.Compute/virtualMachineScaleSets",
    "apiVersion": "2019-03-01",
    "name": "[variables('vmssName')]",
    "location": "[parameters('location')]",
    "sku": {
        "name": "[parameters('vmSku')]",
        "tier": "Standard",
        "capacity": "[parameters('instanceCount')]"
    },
    "dependsOn": [
        "[resourceId('Microsoft.Network/loadBalancers', parameters('lbName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
    ],
    "properties": {
        "overprovision": false,
        "singlePlacementGroup": "[parameters('singlePlacementGroup')]",
        "platformFaultDomainCount": "[parameters('platformFaultDomainCount')]",
        "upgradePolicy": {
            "mode": "Automatic"
        },
        "virtualMachineProfile": {
            "storageProfile": {
                "osDisk": {
                    "caching": "ReadWrite",
                    "createOption": "FromImage"
                },
                "imageReference": "[variables('imageReference')]"
            },
            "osProfile": {
                "computerNamePrefix": "[variables('vmssName')]",
                "adminUsername": "[parameters('adminUsername')]",
                "adminPassword": "[parameters('adminPassword')]"
                },
            "networkProfile": {
                "networkInterfaceConfigurations": [
                    {
                        "name": "[variables('nicName')]",
                        "properties": {
                            "primary": true,
                            "ipConfigurations": [
                                {
                                    "name": "[variables('ipConfigName')]",
                                    "properties": {
                                        "subnet": {
                                            "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('subnet1Name'))]"
                                        },
                                        "loadBalancerBackendAddressPools": [
                                            {
                                              "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('lbName'), variables('lbBackendPoolName'))]"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "extensionProfile": {
                "extensions": [
                    {
                        "name": "InstallIISHelloWorld",
                        "properties": {
                            "publisher": "Microsoft.Compute",
                            "type": "CustomScriptExtension",
                            "typeHandlerVersion": "1.7",
                            "autoUpgradeMinorVersion": true,
                            "settings": {
                                "fileUris": "https://github.com/dharitha23/Rackspace-Azure-Test/blob/d98c3e28a7d2f28267929cdb3ab3d3187859a327/scripts/installwebserver.ps1",
                                "commandToExecute": "powershell.exe -ExecutionPolicy Unrestricted installwebserver.ps1"
                              }
                        }
                    }
                ]
            }
        }
    }
},
{
  "type": "microsoft.insights/autoscalesettings",
  "apiVersion": "2015-04-01",
  "name": "autoscalehost",
  "location": "[parameters('location')]",
  "dependsOn": [
      "[resourceId('Microsoft.Compute/virtualMachineScaleSets/', variables('vmssName'))]"
  ],
  "properties": {
      "name": "autoscalehost",
      "targetResourceUri": "[resourceId('Microsoft.Compute/virtualMachineScaleSets', variables('vmssName'))]",
      "enabled": true,
      "profiles": [
          {
              "name": "Profile1",
              "capacity": {
                  "minimum": "1",
                  "maximum": "10",
                  "default": "1"
              },
              "rules": [
                  {
                      "metricTrigger": {
                          "metricName": "Percentage CPU",
                          "metricResourceUri": "[resourceId('Microsoft.Compute/virtualMachineScaleSets', variables('vmssName'))]",
                          "timeGrain": "PT1M",
                          "statistic": "Average",
                          "timeWindow": "PT5M",
                          "timeAggregation": "Average",
                          "operator": "GreaterThan",
                          "threshold": 50
                      },
                      "scaleAction": {
                          "direction": "Increase",
                          "type": "ChangeCount",
                          "value": "1",
                          "cooldown": "PT5M"
                      }
                  },
                  {
                      "metricTrigger": {
                          "metricName": "Percentage CPU",
                          "metricResourceUri": "[resourceId('Microsoft.Compute/virtualMachineScaleSets', variables('vmssName'))]",
                          "timeGrain": "PT1M",
                          "statistic": "Average",
                          "timeWindow": "PT5M",
                          "timeAggregation": "Average",
                          "operator": "LessThan",
                          "threshold": 30
                      },
                      "scaleAction": {
                          "direction": "Decrease",
                          "type": "ChangeCount",
                          "value": "1",
                          "cooldown": "PT5M"
                      }
                  }
              ]
          }
      ]
  }
}
],
"outputs": {
    "applicationUrl": {
        "type": "string",
        "value": "[concat('http://', reference(variables('lbPublicIpAddressName')).dnsSettings.fqdn)]"
    }
}
}
    